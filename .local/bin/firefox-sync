#!/bin/bash

launchctl=no
ramsize=512
ramon=no

[ $# -eq 0 ] && exit 1
[ $# -gt 1 ] && launchctl=$2
[ $# -gt 2 ] && ramsize=$3 && ramon=yes

link=$1
static=static-$1
volatile=/Volumes/RAM/firefox-$1-$USER

IFS=
set -efu

if [ "$launchctl" = "yes" ]; then
  if [ ! -d "/Volumes/RAM" ] && [ "$ramon" = "yes" ]; then
    $HOME/.local/bin/ramdisk $ramsize
  else
    ffox=`ps ax | grep -i firefox.app/contents/macos/firefox | grep -v grep | cat`
    [ "$ffox" = "" ] && exit # Firefox is not running
  fi
fi

# RAM disk is not available
[ ! -d "/Volumes/RAM" ] && exit 1

# Profile is not available
if [ ! -d "$HOME/Library/Application Support/Firefox/Profiles/$link" ]; then
  [ ! -L "$HOME/Library/Application Support/Firefox/Profiles/$link" ] && exit 1
fi

# Acquire lock
if { set -C; 2>/dev/null > "$volatile.lock"; }; then
  trap "rm -f \"$volatile.lock\"" EXIT
else
  exit # Lock exists
fi

cd "$HOME/Library/Application Support/Firefox/Profiles"

if [ ! -r $volatile ]; then
  mkdir -m0700 $volatile
fi

if [ "$(readlink $link)" != "$volatile" ]; then
  mv $link $static &> /dev/null
  ln -s $volatile $link
fi

if [ -e $link/.unpacked ]; then
  rsync -av --delete --exclude .unpacked ./$link/ ./$static/
else
  rsync -av ./$static/ ./$link/
  touch $link/.unpacked
fi
