#!/bin/bash

launchctl=no

[ $# -eq 0 ] && exit 1
[ $# -gt 1 ] && launchctl=$2

link=$1
static=static-$1
volatile=/Volumes/RAM/firefox-$1-$USER

IFS=
set -efu

if [ "$launchctl" = "yes" ]; then
  ffox=`ps ax | grep -i firefox.app/contents/macos/firefox | grep -v grep`
  [ "$ffox" = "" ] && exit # Firefox is not running
fi

# RAM disk is not available
[ ! -d "/Volumes/RAM" ] && exit

# Profile is not available
[ ! -e "$HOME/Library/Application Support/Firefox/Profiles/$link" ] && exit

# Acquire lock
if { set -C; 2>/dev/null > "$volatile.lock"; }; then
  trap "rm -f \"$volatile.lock\"" EXIT
else
  # Lock exists
  exit
fi

cd "$HOME/Library/Application Support/Firefox/Profiles"

if [ ! -r $volatile ]; then
  mkdir -m0700 $volatile
fi

if [ "$(readlink $link)" != "$volatile" ]; then
  mv $link $static &> /dev/null
  ln -s $volatile $link
fi

if [ -e $link/.unpacked ]; then
  rsync -av --delete --exclude .unpacked ./$link/ ./$static/
else
  rsync -av ./$static/ ./$link/
  touch $link/.unpacked
fi
